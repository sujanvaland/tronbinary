@model AdCampaignListModel
@using SmartStore.Admin.Models.AdCampaign
@using Telerik.Web.Mvc.UI
@{   
    ViewBag.Title = T("Admin.AdCampaign.Manage").Text;
}
<div class="section-header">
    <div class="title">
        <i class="fa fa-sitemap"></i>
        @T("Admin.AdCampaign.Manage") 
    </div>
    <div class="options">
		@{ Html.RenderWidget("admin_button_toolbar_before"); }

        <a href="@Url.Action("Create")" class="btn btn-primary">
			<i class="fa fa-plus"></i>
			<span>@T("Admin.Common.AddNew")</span>
		</a>

		@{ Html.RenderWidget("admin_button_toolbar_after"); }
    </div>
</div>

<div class="row mt-3 grid-filter">
	<div class="col-sm-6 col-lg-4 col-xl-3 form-group">
		@Html.SmartLabelFor(model => model.SearchCampaignName)
		@Html.TextBoxFor(model => Model.SearchCampaignName, new { @class = "form-control" })
	</div>
	<div class="col-sm-6 col-lg-4 col-xl-3 form-group">
		@Html.SmartLabelFor(model => model.SearchWebsiteUrl)
		@Html.TextBoxFor(model => model.SearchWebsiteUrl, new { @class = "form-control" })
	</div>
	@if (Model.ListCreditType.Count > 1)
	{
		<div class="col-sm-6 col-lg-4 col-xl-3 form-group">
			@Html.SmartLabelFor(model => model.CreditType)
			@Html.DropDownListFor(model => model.CreditType, Model.ListCreditType, new { @class = "form-control" })
		</div>
	}
	@if (Model.ListAdType.Count > 1)
	{
		<div class="col-sm-6 col-lg-4 col-xl-3 form-group">
			@Html.SmartLabelFor(model => model.AdType)
			@Html.DropDownListFor(model => model.AdType, Model.ListAdType, new { @class = "form-control" })
		</div>
	}
	<div class="col-sm-6 col-lg-4 col-xl-3 form-group">
		<label>&nbsp;</label>
		<button type="submit" id="btnSearch" value="btnSearch" class="btn btn-secondary btn-block">
			<span>@T("Admin.Common.ApplyFilter")</span>
		</button>
	</div>
</div>

<div class="mt-2">
	@(Html.Telerik().Grid<AdCampaignModel>()
		.Name("categories-grid")
		.ClientEvents(events => events
			.OnDataBinding("onDataBinding")
			.OnDataBound("onDataBound"))
		.Columns(columns =>
		{
			columns.Bound(x => x.Id)
				.ClientTemplate("<input type='checkbox' name='checkedRecords' value='<#= Id #>' class='checkboxGroups'/>")
				.Title("<input id='mastercheckbox' type='checkbox'/>")
				.Width(50)
				.HtmlAttributes(new { style = "text-align:center" })
				.HeaderHtmlAttributes(new { style = "text-align:center" });
			columns.Bound(x => x.Name)
				.Title(T("Admin.AdCampaign.Name").Text)
				.Template(x => Html.ActionLink(x.Name, "Edit", new { id = x.Id }))
				.ClientTemplate("<a href=\"Edit/<#= Id #>\"><#= Name #></a>");
			columns.Bound(x => x.WebsiteUrl);
			columns.Bound(x => x.AssignedCredit);
			columns.Bound(x => x.UsedCredit);
			columns.Bound(x => x.AvailableCredit);
			columns.Bound(x => x.CreditType);
			columns.Bound(x => x.AdType);
			columns.Bound(x => x.Published)
				.Width(160)
				.Template(item => @Html.SymbolForBool(item.Published))
				.ClientTemplate(@Html.SymbolForBool("Published"))
				.Centered();
			columns.Bound(x => x.Id)
					.Width(250)
								.Centered()
								.ClientTemplate("" +
								"<button id=\"completerequest\" onclick =\"CompleteRequest('<#= Id #>');\" name=\"completerequest\" type=\"button\" class=\"t-button t-grid-insert <#= (1== 1) ? '' : '' #>\" >Approve</button>" +
								"<button id=\"rejectrequest\" onclick =\"RejectRequest('<#= Id #>');\" name=\"rejectrequest\" type=\"button\" class=\"t-button t-grid-delete <#= (1 == 1) ? '' : '' #>\" >Reject</button>"
								)
								.Title(T("Admin.Common.Action").Text);
		})
		.Pageable(settings => settings.PageSize(Model.GridPageSize).Position(GridPagerPosition.Both))
		.DataBinding(dataBinding => dataBinding.Ajax().Select("List", "AdCampaign"))
		.PreserveGridState()
		.EnableCustomBinding(true))
</div>

<script type="text/javascript">
	@*used by widget SmartStore.CommonExportProviders::ExportButtonsGeneral.cshtml*@
	var selectedIds = [];

	$(document).ready(function () {
		//search button
		$('#btnSearch').click(function () {
			//search
			var grid = $('#categories-grid').data('tGrid');
			grid.currentPage = 1; //new search. Set page size to 1
			grid.ajaxRequest();
			$('.checkboxGroups').attr('checked', false).change();
			selectedIds = [];
			return false;
		});

		$("#@Html.FieldIdFor(model => model.SearchCampaignName), #@Html.FieldIdFor(model => model.SearchWebsiteUrl)").keydown(function (event) {
			if (event.keyCode == 13) {
				$("#btnSearch").click();
				return false;
			}
		});

		$('#mastercheckbox').click(function () {
			$('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
		});

		//wire up checkboxes.
		$(document).on('change', '#categories-grid input[type=checkbox][id!=mastercheckbox]', function (e) {
			var $check = $(this);
			if ($check.is(":checked") == true) {
				var checked = jQuery.inArray($check.val(), selectedIds);
				if (checked == -1) {
					selectedIds.push($check.val());
				}
			}
			else {
				var checked = jQuery.inArray($check.val(), selectedIds);
				if (checked > -1) {
					selectedIds = $.grep(selectedIds, function (item, index) {
						return item != $check.val();
					});
				}
			}
			updateMasterCheckbox();
		});
	});

	function onDataBinding(e) {
		var searchModel = {
			SearchCampaignName: $('#@Html.FieldIdFor(model => model.SearchCampaignName)').val(),
			SearchWebsiteUrl: $('#@Html.FieldIdFor(model => model.SearchWebsiteUrl)').val(),
			CreditType: $('#CreditType').val(),
			AdType: $('#AdType').val()
		};
		e.data = searchModel;
	}

	function onDataBound(e) {
		$('#categories-grid input[type=checkbox][id!=mastercheckbox]').each(function () {
			var currentId = $(this).val();
			var checked = jQuery.inArray(currentId, selectedIds);
			$(this).attr('checked', checked > -1);
		});

		updateMasterCheckbox();
	}

	function updateMasterCheckbox() {
		var numChkBoxes = $('#categories-grid input[type=checkbox][id!=mastercheckbox]').length;
		var numChkBoxesChecked = $('#categories-grid input[type=checkbox][checked][id!=mastercheckbox]').length;
		$('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
	}


	function CompleteRequest(id)
	{
		//call reject ajax method to controller of action
		$.ajax({
			type: "POST",
			url: '@(Url.Content("~/Admin/AdCampaign/CompleteRequest"))',
			data: "{ id : " + id + "}",
			dataType: "json",
            contentType: 'application/json; charset=utf-8',
			success: function (data) {
				var grid = $('#categories-grid').data('tGrid');
				grid.currentPage = 1; //new search. Set page size to 1
				grid.ajaxRequest();
				return false;
			},
			error: function () {
                alert("Error occured!!");
			}
		});
	}

	function RejectRequest(id)
	{
		//call reject ajax method to controller of action
		$.ajax({
			type: "POST",
			url: '@(Url.Content("~/Admin/AdCampaign/RejectRequest"))',
			data: "{ id : " + id + "}",
			dataType: "json",
            contentType: 'application/json; charset=utf-8',
			success: function (data) {
				var grid = $('#categories-grid').data('tGrid');
				grid.currentPage = 1; //new search. Set page size to 1
				grid.ajaxRequest();
				return false;
			},
			error: function () {
                alert("Error occured!!");
			}
		});
	}

</script>