@model TransactionModel
@using SmartStore.Admin.Models.Investment;
@Html.ValidationSummary(false)
<style>
	.bg-primary {
		background-color: #1955a4 !important;
	}
</style>
@using (Html.BeginForm(null, null, FormMethod.Post))
{
	@Html.HiddenFor(model => model.Id)
	@Html.HiddenFor(model => model.BitcoinAddress)
<div class="content-box">
	<div class="section-header">
		<div class="title">
			<i class="fa fa-google-wallet"></i>
			@T("Admin.Investment.WithdrawalTitle")
			<div class="btn-group ml-2" style="vertical-align: text-top">
				<a class="btn btn-outline-secondary btn-sm tooltip-toggle active" style="cursor:default" href="javascript:void(0)">
					<i class="fa fa-bars"></i>
				</a>
			</div>
		</div>
	</div>

	<div class="row">
		<div class="col-xl-3 col-sm-6 mb-3">
			<div class="card text-white bg-primary o-hidden h-100">
				<div class="card-body">
					<div class="card-body-icon">
						<i class="fa fa-fw fa-money"></i>
					</div>
					<div class="mr-5" style="font-size:1.5em;">
						@ViewBag.CurrencyCode @Model.AvailableBalance
						<br />@T("Withdrawals.AvailableBalance")
					</div>
				</div>
			</div>
		</div>
		<div class="col-xl-3 col-sm-6 mb-3">
			<div class="card text-white bg-success o-hidden h-100">
				<div class="card-body">
					<div class="card-body-icon">
						<i class="fa fa-fw fa-gift"></i>
					</div>
					<div class="mr-5" style="font-size:1.5em;">
						@ViewBag.CurrencyCode @Model.CompletedWithdrawal
						<br />@T("Withdrawals.CompletedWithdrawals")
					</div>
				</div>
			</div>
		</div>

	</div>

	<div class="row">
		<div class="col-lg-3 form-group">
			@T("Investment.Withdrawal.Amount")
		</div>
		<div class="col-lg-3 form-group">
			@Html.EditorFor(model => model.Amount) Enter amount in @ViewBag.CurrencyCode
		</div>
	</div>
	<div class="row">
		<div class="col-lg-3 form-group">
			@T("Investment.Withdrawal.SelectProcessor")
		</div>
		<div class="col-lg-3 form-group">
			@Html.DropDownListFor(model => model.ProcessorId, Model.AvailableProcessor)
			@Html.ValidationMessageFor(model => model.ProcessorId)
		</div>
	</div>
	<div class="row">
		<div class="col-lg-3 form-group">
			@Html.SmartLabelFor(model => model.WithdrawalFees)
		</div>
		<div class="col-lg-3 form-group">
			@Html.DisplayFor(model => model.WithdrawalFees) %
		</div>
	</div>
	<div class="row">
		<div class="col-lg-3 form-group">
			<label>@T("Investment.Withdrawal.TotalReceivable")</label>
		</div>
		<div class="col-lg-3 form-group">
			<label id="TotalReceivable">0</label> @ViewBag.CurrencyCode
		</div>
	</div>
	@if (Model.CoinPaymentEnabled)
	{
		<div class="row">
			<div class="col-lg-3 form-group">
				@Html.SmartLabelFor(model => model.BitcoinAddress)
			</div>
			<div class="col-lg-3 form-group">
				@Html.DisplayFor(model => model.BitcoinAddress)
				@Html.ValidationMessageFor(model => model.BitcoinAddress)
			</div>
		</div>
	}
	@if (Model.PayeerEnabled)
	{
		<div class="row">
			<div class="col-lg-3 form-group">
				@Html.SmartLabelFor(model => model.PayeerAcc)
			</div>
			<div class="col-lg-3 form-group">
				@Html.DisplayFor(model => model.PayeerAcc)
				@Html.ValidationMessageFor(model => model.PayeerAcc)
			</div>
		</div>
	}
	@if (Model.PMEnabled)
	{
		<div class="row">
			<div class="col-lg-3 form-group">
				@Html.SmartLabelFor(model => model.PMAcc)
			</div>
			<div class="col-lg-3 form-group">
				@Html.DisplayFor(model => model.PMAcc)
				@Html.ValidationMessageFor(model => model.PMAcc)
			</div>
		</div>
	}
	@if (Model.STPEnabled)
	{
		<div class="row">
			<div class="col-lg-3 form-group">
				@Html.SmartLabelFor(model => model.SolidTrustPayAcc)
			</div>
			<div class="col-lg-3 form-group">
				@Html.DisplayFor(model => model.SolidTrustPayAcc)
				@Html.ValidationMessageFor(model => model.SolidTrustPayAcc)
			</div>
		</div>
	}
	@if (Model.PayzaEnabled)
	{
		<div class="row">
			<div class="col-lg-3 form-group">
				@Html.SmartLabelFor(model => model.PayeerAcc)
			</div>
			<div class="col-lg-3 form-group">
				@Html.DisplayFor(model => model.PayeerAcc)
				@Html.ValidationMessageFor(model => model.PayeerAcc)
			</div>
		</div>
	}
	@if (Model.AdvanceCashEnabled)
	{
		<div class="row">
			<div class="col-lg-3 form-group">
				@Html.SmartLabelFor(model => model.AdvanceCashAcc)
			</div>
			<div class="col-lg-3 form-group">
				@Html.DisplayFor(model => model.AdvanceCashAcc)
				@Html.ValidationMessageFor(model => model.AdvanceCashAcc)
			</div>
		</div>
	}
	<div class="row">
		<div class="col-lg-3">
			<div class="options">
				<button type="submit" name="save" value="save" class="btn btn-primary">
					<i class="fa fa-check"></i>
					<span>@T("Admin.Common.Save")</span>
				</button>
				<button type="reset" name="reset" class="btn btn-secondary">
					<span>@T("Admin.Common.Cancel")</span>
				</button>
			</div>
		</div>
	</div>
</div>
}

<script>
	$('#Amount').change(function () {
		if (isNaN($('#Amount').val())) {
			$('#Amount').val('');
		}
		else {
			var baseAmount = $('#Amount').val();
			var totalReceivables = parseFloat(baseAmount) - (parseFloat(baseAmount) * @Model.WithdrawalFees) / 100;
			$('#TotalReceivable').text(totalReceivables);
		}
	});
</script>